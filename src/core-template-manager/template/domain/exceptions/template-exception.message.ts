/**
 * Copyright (c) 2025 Marc Ginger. All rights reserved.
 *
 * This file is part of a proprietary NestJS system developed by Marc Ginger.
 * Unauthorized copying, modification, distribution, or use of this file,
 * via any medium, is strictly prohibited and may result in legal action.
 *
 * Confidential and proprietary.
 */

import { IException } from 'src/shared/domain/exceptions';

export const TemplateExceptionMessage: Record<string, IException> = {
  userRequiredForOperation: {
    message: `User token is required to perform this operation on Template`,
    description: `Authentication is required to modify Template relationships`,
    code: `USER_REQUIRED_FOR_OPERATION_TEMPLATE`,
    exception: `UnauthorizedException`,
    statusCode: 401,
    domain: `true`,
  },
  userRequiredForUpdates: {
    message: `User context is required for Template updates`,
    description: `Authentication is required for property updates on Template`,
    code: `USER_REQUIRED_FOR_UPDATES_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  userRequiredForDeletion: {
    message: `User context is required for Template deletion operations`,
    description: `Authentication is required to delete Template entities`,
    code: `USER_REQUIRED_FOR_DELETION_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  userRequiredForEnable: {
    message: `User context is required for Template enable operations`,
    description: `Authentication is required to enable Template entities`,
    code: `USER_REQUIRED_FOR_ENABLE_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  userRequiredForDisable: {
    message: `User context is required for Template disable operations`,
    description: `Authentication is required to disable Template entities`,
    code: `USER_REQUIRED_FOR_DISABLE_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  userRequiredForStatus: {
    message: `User context is required for Template status updates`,
    description: `Authentication is required to update Template status`,
    code: `USER_REQUIRED_FOR_STATUS_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  invalidStatusValue: {
    message: `Status value is required for Template`,
    description: `A valid status value must be provided when updating Template status`,
    code: `INVALID_STATUS_VALUE_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  cannotDeactivateDefault: {
    message: `Cannot deactivate a default template. Please set another template as default first.`,
    description: `Business rule violation: default entities cannot be deactivated without setting another as default`,
    code: `CANNOT_DEACTIVATE_DEFAULT_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 409,
    domain: `true`,
  },
  cannotSetInactiveAsDefault: {
    message: `Cannot set an inactive template as default. Please activate the template first.`,
    description: `Business rule violation: inactive entities cannot be set as default`,
    code: `CANNOT_SET_INACTIVE_AS_DEFAULT_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 409,
    domain: `true`,
  },
  fieldNameRequired: {
    message: `Name is required and cannot be empty`,
    description: `The name field is required for Template and must be a non-empty string`,
    code: `INVALID_NAME_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldTransportRequired: {
    message: `Transport is required`,
    description: `The transport field is required for Template`,
    code: `INVALID_TRANSPORT_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldUseCaseRequired: {
    message: `Use case is required`,
    description: `The use_case field is required for Template`,
    code: `INVALID_USE_CASE_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldContentRequired: {
    message: `Content is required and cannot be empty`,
    description: `The content field is required for Template and must be a non-empty string`,
    code: `INVALID_CONTENT_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldContentUrlRequired: {
    message: `Content url is required and cannot be empty`,
    description: `The content_url field is required for Template and must be a non-empty string`,
    code: `INVALID_CONTENT_URL_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldPayloadSchemaRequired: {
    message: `Payload schema is required`,
    description: `The payload_schema field is required for Template`,
    code: `INVALID_PAYLOAD_SCHEMA_VALUE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldCodeRequired: {
    message: `Code is required and cannot be empty`,
    description: `This error occurs when creating a TemplateIdentifier with an invalid code value.`,
    code: `FIELD_CODE_REQUIRED_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  fieldCodeEmpty: {
    message: `Code cannot be empty or whitespace`,
    description: `This error occurs when creating a TemplateIdentifier with an empty or whitespace-only code value.`,
    code: `FIELD_CODE_EMPTY_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  invalidRecordOfInputType: {
    message: `Invalid input type for Template record conversion`,
    description: `This error occurs when trying to convert a string to a Record<string, ITemplate> in toRecordOfTemplates function.`,
    code: `INVALID_RECORD_OF_INPUT_TYPE_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  invalidArrayOfInputType: {
    message: `Invalid input type for Template array conversion`,
    description: `This error occurs when trying to convert a string to an array of ITemplate in toArrayOfTemplates function.`,
    code: `INVALID_ARRAY_OF_INPUT_TYPE_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  invalidStringConversion: {
    message: `Cannot convert string to Template without valid identifier`,
    description: `This error occurs when trying to convert a string to ITemplate but no valid string identifier column is available.`,
    code: `INVALID_STRING_CONVERSION_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  invalidInputTypeForConversion: {
    message: `Invalid input type for Template conversion`,
    description: `This error occurs when trying to convert a string to ITemplate in toTemplate function when string conversion is not supported.`,
    code: `INVALID_INPUT_TYPE_FOR_CONVERSION_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  requiredName: {
    message: `Name is required and cannot be null or undefined`,
    description: `This error occurs when validating a Template and the required field name is missing or null.`,
    code: `REQUIRED_NAME_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  requiredTransport: {
    message: `Transport is required and cannot be null or undefined`,
    description: `This error occurs when validating a Template and the required field transport is missing or null.`,
    code: `REQUIRED_TRANSPORT_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  requiredUseCase: {
    message: `UseCase is required and cannot be null or undefined`,
    description: `This error occurs when validating a Template and the required field useCase is missing or null.`,
    code: `REQUIRED_USE_CASE_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  requiredContent: {
    message: `Content is required and cannot be null or undefined`,
    description: `This error occurs when validating a Template and the required field content is missing or null.`,
    code: `REQUIRED_CONTENT_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  requiredContentUrl: {
    message: `ContentUrl is required and cannot be null or undefined`,
    description: `This error occurs when validating a Template and the required field contentUrl is missing or null.`,
    code: `REQUIRED_CONTENT_URL_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  emptyVersionArray: {
    message: `Version array cannot be empty`,
    description: `This error occurs when validating a Template and the version array is empty when it should contain values.`,
    code: `EMPTY_VERSION_ARRAY_FOR_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  payloadSchemaOneRequired: {
    message: `At least one Payload schema is required`,
    description: `Business rule: Template must have at least one Payload schema associated`,
    code: `PAYLOAD_SCHEMA_ONE_REQUIRED_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  payloadSchemaNotFound: {
    message: `Payload schema not found`,
    description: `The specified Payload schema does not exist or is not accessible`,
    code: `PAYLOAD_SCHEMA_NOT_FOUND_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 404,
    domain: `true`,
  },
  payloadSchemaRequired: {
    message: `Payload schema is required`,
    description: `Payload schema must be provided for Template operations`,
    code: `PAYLOAD_SCHEMA_REQUIRED_TEMPLATE`,
    exception: `TemplateDomainException`,
    statusCode: 400,
    domain: `true`,
  },
  userRequiredToCreateTemplate: {
    message: `User token is required to create a template`,
    description: `This error occurs when a user tries to create a template without providing a valid user token.`,
    code: `USER_REQUIRED_TO_CREATE_TEMPLATE`,
    exception: `UnauthorizedException`,
    domain: `true`,
    statusCode: 401,
  },
  propsRequiredToCreateTemplate: {
    message: `Properties are required to create a template`,
    description: `This error occurs when a user tries to create a template without providing the required properties object.`,
    code: `PROPS_REQUIRED_TO_CREATE_TEMPLATE`,
    exception: `BadRequestException`,
    domain: `true`,
    statusCode: 400,
  },
  userRequiredToUpdateTemplate: {
    message: `User token is required to update a template`,
    description: `This error occurs when a user tries to update a template without providing a valid user token.`,
    code: `USER_REQUIRED_TO_UPDATE_TEMPLATE`,
    exception: `UnauthorizedException`,
    domain: `true`,
    statusCode: 401,
  },
  TemplateUserRequired: {
    message: `User token is required for this operation on template`,
    description: `This error occurs when a user tries to perform an operation on template without providing a valid user token.`,
    code: `USER_REQUIRED_FOR_OPERATION_TEMPLATE`,
    exception: `UnauthorizedException`,
    domain: `true`,
    statusCode: 401,
  },
  codeRequiredTemplate: {
    message: `Valid code is required for this operation on template`,
    description: `This error occurs when a user tries to perform an operation on template without providing a valid code.`,
    code: `CODE_REQUIRED_FOR_OPERATION_TEMPLATE`,
    exception: `BadRequestException`,
    domain: `true`,
    statusCode: 400,
  },
  notImplemented: {
    message: `This operation is not implemented for Template`,
    description: `The requested operation is not yet implemented for Template entities`,
    code: `NOT_IMPLEMENTED_TEMPLATE`,
    exception: `NotImplementedException`,
    statusCode: 501,
    domain: `true`,
  },
  notFound: {
    message: `Template not found`,
    description: `The requested Template entity could not be found in the system`,
    code: `TEMPLATE_NOT_FOUND`,
    exception: `NotFoundException`,
    statusCode: 404,
    domain: `true`,
  },
  createError: {
    message: `Invalid Template details creating an item`,
    description: `The provided Template details are invalid or incomplete for creation`,
    code: `INVALID_TEMPLATE_CREATE_DETAILS`,
    exception: `BadRequestException`,
    statusCode: 400,
    domain: `true`,
  },
  updateError: {
    message: `Invalid Template details updating an item`,
    description: `The provided Template details are invalid or incomplete for update`,
    code: `INVALID_TEMPLATE_UPDATE_DETAILS`,
    exception: `BadRequestException`,
    statusCode: 400,
    domain: `true`,
  },
  deleteError: {
    message: `Invalid Template details for deleting an item`,
    description: `The provided Template details are invalid or the entity cannot be deleted due to business rules`,
    code: `INVALID_TEMPLATE_DELETE_DETAILS`,
    exception: `BadRequestException`,
    statusCode: 400,
    domain: `true`,
  },
};
