{
	"tables": {
		"99dc029f-a304-4789-b8c3-8d2ae64538e5": {
			"id": "99dc029f-a304-4789-b8c3-8d2ae64538e5",
			"visible": true,
			"name": "message",
			"desc": "Individual Slack message records that track the complete lifecycle of each message from creation to delivery. Provides audit trail and delivery status monitoring.",
			"estimatedSize": "",
			"cols": [
				{
					"id": "80f7a00a-8401-49d1-bcd0-c2f82a3704b9",
					"name": "id",
					"datatype": "VARCHAR",
					"param": "",
					"pk": true,
					"nn": true,
					"fk": false,
					"comment": "Unique identifier for the message record, typically a UUID generated when the message is initially created.",
					"defaultvalue": "uuid()",
					"data": "550e8400-e29b-41d4-a716-446655440000",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "04c8ddb6-9214-4fd7-a3ec-f22cb17f64cd",
					"name": "config_code",
					"datatype": "VARCHAR",
					"param": "20",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Reference to the configuration code that was used to determine the delivery channel and template for this message.",
					"defaultvalue": "",
					"data": "payment-notifications",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "54135a90-ddc1-4706-905b-66b3d3581bef",
					"name": "channel",
					"datatype": "VARCHAR",
					"param": "255",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "The actual Slack channel ID or name where this message was sent or is scheduled to be sent.",
					"defaultvalue": "",
					"data": "#finance-alerts",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "f5c1b872-2bb5-48b7-a82a-1ff1ceb0e96f",
					"name": "template_code",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Reference to the template code that was used to render the final message content.",
					"defaultvalue": "",
					"data": "payment-alert-template",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "cf794376-62d1-4e6c-971d-8f1c76fd2bd2",
					"name": "payload",
					"datatype": "JSON",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "The original data payload that was provided when the message was requested, used for template rendering and audit purposes.",
					"defaultvalue": "",
					"data": "{\"customer\": {\"name\": \"John Doe\", \"id\": \"12345\"}, \"payment\": {\"amount\": 150.00, \"status\": \"completed\", \"id\": \"pay_123\"}}",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "b6a4dcce-009b-42c3-914a-7b318541de7d",
					"name": "rendered_message",
					"datatype": "TEXT",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "The final rendered message content after template processing, exactly as it was sent to Slack.",
					"defaultvalue": "",
					"data": "🔔 **Payment Alert**\\n\\nCustomer: John Doe\\nAmount: $150.00\\nStatus: completed",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "4d862233-be16-4827-ae08-1c5970d1343d",
					"name": "status",
					"datatype": "ENUM",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Current delivery status of the message. Possible values: PENDING, SCHEDULED, PROCESSING, SENT, FAILED, CANCELLED.",
					"defaultvalue": "",
					"data": "pending",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "pending,sent,failed,scheduled,retrying",
					"estimatedSize": ""
				},
				{
					"id": "873839d6-b449-495c-ab36-2c04dad28a32",
					"name": "scheduled_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Optional timestamp when the message is scheduled to be delivered. Null for immediate delivery messages.",
					"defaultvalue": "",
					"data": "2025-08-01T15:30:00Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "f4561d34-5aa1-4a0b-be8b-4dabea4a5a7b",
					"name": "sent_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Timestamp when the message was successfully delivered to Slack. Null if not yet sent or failed.",
					"defaultvalue": "",
					"data": "2025-08-01T10:15:23Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "4cb67184-2cc1-4046-9a08-ee062e6c094d",
					"name": "failure_reason",
					"datatype": "VARCHAR",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Detailed error message or reason if the message delivery failed. Null for successful deliveries.",
					"defaultvalue": "",
					"data": "Slack API rate limit exceeded. Will retry in 60 seconds.",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "d52685a8-a620-4951-967b-04775c783a9a",
					"name": "correlation_id",
					"datatype": "VARCHAR",
					"param": "100",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Optional correlation identifier that can be used to trace this message across distributed systems and logs.",
					"defaultvalue": "",
					"data": "req_abc123def456",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "3b4a9a3e-6e0c-4047-87c7-12afe175f011",
					"name": "retry_count",
					"datatype": "INT",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Number of delivery attempts made for this message. Starts at 0 and increments with each retry.",
					"defaultvalue": "0",
					"data": "2",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "d9716d0a-eb32-4993-b9b6-e0940a87ce9d",
					"name": "created_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Timestamp with time zone when the message record was initially created in the system.",
					"defaultvalue": "",
					"data": "2025-08-01T10:00:00Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "17ba4405-0551-4691-8ec8-48fbc8fabe1f",
					"name": "updated_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Timestamp with time zone when the message record was last modified, typically updated when status changes.",
					"defaultvalue": "",
					"data": "2025-08-01T10:15:23Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				}
			],
			"relations": [],
			"lines": [],
			"keys": [
				{
					"id": "af001ea5-5f5f-4f2b-a5fe-2e2c1d7de2f8",
					"name": "PRIMARY",
					"isPk": true,
					"cols": [
						{
							"id": "dbb43189-d2cd-4979-a65f-cb199a3108fc",
							"colid": "80f7a00a-8401-49d1-bcd0-c2f82a3704b9"
						}
					]
				}
			],
			"indexes": [
				{
					"id": "1aaf7f1f-bfc4-45a7-ac86-8f6f47bec8bf",
					"name": "message_ix_channel",
					"unique": false,
					"fulltext": false,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "e63ba121-196b-4902-b183-b2f1a92b75bb",
							"colid": "54135a90-ddc1-4706-905b-66b3d3581bef",
							"mariadb": {
								"desc": false
							}
						}
					]
				}
			],
			"embeddable": false,
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"tabletype": "InnoDB",
			"collation": "utf8mb4_general_ci",
			"charset": "utf8mb4",
			"rowformat": "",
			"database": "service",
			"initautoinc": "",
			"temporary": false,
			"ifnotexists": false
		},
		"d65aac60-a954-464f-b057-656f7ace6b56": {
			"id": "d65aac60-a954-464f-b057-656f7ace6b56",
			"visible": true,
			"name": "send_slack_message",
			"desc": "",
			"estimatedSize": "",
			"cols": [
				{
					"id": "21bb39c6-48a5-4b46-b2e4-7f226d08080f",
					"name": "code",
					"datatype": "VARCHAR",
					"param": "",
					"pk": true,
					"nn": true,
					"fk": false,
					"comment": "",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "21506ee9-0f98-47fa-b8b4-da52d513a986",
					"name": "channel",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Channel must start with # for channels or @ for direct messages (use user ID like @U1234567890)",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "3b4f88f0-fb08-4a80-99f2-063aab3a95cc",
					"name": "config_code",
					"datatype": "VARCHAR",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Configuration code for Slack settings",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "853dd833-ddda-4be8-aafe-f6a44c7cc6c8",
					"name": "templateCode",
					"datatype": "VARCHAR",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "6e8f7f94-850c-43b3-9c46-bb3f8d45f8dc",
					"name": "payload",
					"datatype": "JSON",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Dynamic payload for message template variables",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "8ced4ccd-f182-435d-954d-ca78d1b917a1",
					"name": "scheduled_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Schedule the message for future delivery",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "74170486-4f27-4398-a402-e310d7146607",
					"name": "priority",
					"datatype": "INT",
					"param": "20",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Message priority (1-20, higher number = higher priority)",
					"defaultvalue": "1",
					"data": "5",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "abdb7c16-f71e-4ed7-bee5-10fef13eec97",
					"name": "correlationId",
					"datatype": "VARCHAR",
					"param": "50",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Correlation ID for tracking the request",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				}
			],
			"relations": [],
			"lines": [],
			"keys": [
				{
					"id": "c92c4a18-dd46-402f-94cf-a589e9d0d79c",
					"name": "PRIMARY",
					"isPk": true,
					"cols": [
						{
							"id": "358806ca-8af3-4f2f-a612-87b53a0c36f1",
							"colid": "21bb39c6-48a5-4b46-b2e4-7f226d08080f"
						}
					]
				}
			],
			"indexes": [],
			"embeddable": false,
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"tabletype": "InnoDB",
			"collation": "utf8mb4_general_ci",
			"charset": "utf8mb4",
			"rowformat": "",
			"database": "service",
			"initautoinc": "",
			"temporary": false,
			"ifnotexists": false
		}
	},
	"relations": {},
	"notes": {},
	"lines": {},
	"model": {
		"color": "transparent",
		"activeDiagram": "914a25f8-2e60-46c0-a2cf-907835861077",
		"caseConvention": "under",
		"def_charset": "utf8mb4",
		"def_collation": "utf8mb4_general_ci",
		"def_coltopk": true,
		"def_rowformat": "",
		"def_tabletype": "InnoDB",
		"def_database": "service",
		"desc": "## 🔩 `core-slack` Service\n\n### 📘 Description\n\nThe `core-slack` service is a dedicated messaging microservice responsible for delivering messages to Slack channels or users across the platform. It supports dynamic message templating, multi-tenant configuration, message scheduling, delivery tracking, and retry handling. The service ensures auditability and traceability of every Slack message by persisting domain events in EventStoreDB and maintaining message records in SQL.\n\nThis service acts as the **Slack integration layer** for the platform and can be invoked by other services (e.g., workflows, notifications, alerts) to publish structured messages in a configurable, tenant-aware, and observable manner.\n\n---\n\n### 🌟 Core Responsibilities\n\n* 🍿 **Tenant-Aware Configuration**: Centralized storage of Slack channel mappings and message settings per tenant and code.\n* 🧠 **Template-Driven Messaging**: Dynamic rendering of Slack messages using reusable templates and JSON payloads.\n* 📬 **Reliable Delivery**: Queued delivery of Slack messages with status tracking, retry logic, and failure reason logging.\n* ⏱️ **Message Scheduling**: Optionally schedule Slack messages for future delivery.\n* 📜 **Auditable Event Trail**: All message events are stored in EventStoreDB for full traceability and replayability.\n* 🚦 **Delivery Monitoring**: Real-time and historical tracking of Slack message status, with optional Redis projections for fast access.\n\n---\n\n### 🚰 Backed by Three Data Layers\n\n| Storage          | Purpose                                                  |\n| ---------------- | -------------------------------------------------------- |\n| **SQL**          | Configurations, templates, and message records           |\n| **Redis**        | Optional caching of configs, templates, and status       |\n| **EventStoreDB** | Immutable log of all domain events for message lifecycle |\n\n---\n\n### 📆 Typical Workflow\n\n1. A service issues a `SendSlackMessageCommand` with a tenant, config code, and payload.\n2. The `core-slack` service:\n\n   * Looks up the configuration and template\n   * Validates and renders the message\n   * Emits a `SlackMessageRequestedEvent`\n3. A background worker (via BullMQ) delivers the message via Slack’s API.\n4. The result is recorded via `SlackMessageSentEvent` or `SlackMessageFailedEvent`.\n5. Message status is persisted in SQL, optionally cached in Redis, and visible in monitoring tools.\n\n---\n\n### 🧱 Use Cases\n\n* Notify users of business events (e.g., \"payment completed\", \"loan approved\")\n* Alert operations teams of anomalies or system errors\n* Schedule customer engagement or compliance notifications\n* Integrate with Slack bots or workflows downstream\n",
		"id": "6645c9b2-33b9-4cef-bcf6-5f382e5ff3a6",
		"isDirty": true,
		"name": "slack message service",
		"parentTableInFkCols": true,
		"path": "",
		"replaceSpace": "_",
		"sideSelections": true,
		"storedin": {
			"major": 4,
			"minor": 6,
			"extra": 6
		},
		"type": "MARIADB",
		"version": 1,
		"lastSaved": 1754132322492,
		"beforeScript": "",
		"afterScript": "",
		"sqlSettings": {
			"wrapLines": true,
			"wrapOffset": 80,
			"indent": true,
			"indentationString": "spaces",
			"indentationSize": 2,
			"limitItemsOnLine": true,
			"maxListItemsOnLine": 3,
			"statementDelimiter": ";",
			"routineDelimiter": "//",
			"keywordCase": "upper",
			"identiferCase": "original",
			"includeSchema": "always",
			"quotationExistance": "if_needed"
		},
		"writeFileParam": false,
		"modelHTMLReportDir": "D:\\gs\\cqrs-builder\\tools\\domain\\report",
		"modelPdfReportPath": "D:\\gs\\banking\\gs\\mdt\\gsmdm-person\\tools\\domain\\data\\Masterdata person management.pdf",
		"connectionVersion": "",
		"authorName": "",
		"companyDetails": "",
		"companyUrl": "",
		"synchronizationSettings": {
			"preserveData": "use_temporary_tables",
			"ignoreSystemDefaults": "yes",
			"includeWarnings": "yes",
			"includeCreationSql": "no"
		},
		"laststoredin": {
			"major": 11,
			"minor": 0,
			"extra": 0
		}
	},
	"otherObjects": {},
	"diagrams": {
		"914a25f8-2e60-46c0-a2cf-907835861077": {
			"id": "914a25f8-2e60-46c0-a2cf-907835861077",
			"lineColor": "transparent",
			"description": "this is the main diagram",
			"diagramItems": {
				"99dc029f-a304-4789-b8c3-8d2ae64538e5": {
					"referencedItemId": "99dc029f-a304-4789-b8c3-8d2ae64538e5",
					"x": 45,
					"y": 110,
					"gHeight": 308,
					"gWidth": 247,
					"color": "#ffffff",
					"background": "#03a9f4",
					"resized": false,
					"autoExpand": true,
					"backgroundOpacity": "10",
					"collapsed": false
				},
				"d65aac60-a954-464f-b057-656f7ace6b56": {
					"referencedItemId": "d65aac60-a954-464f-b057-656f7ace6b56",
					"x": 436,
					"y": 148,
					"gHeight": 171,
					"gWidth": 237,
					"color": "#ffffff",
					"background": "#03a9f4",
					"resized": false,
					"autoExpand": true,
					"backgroundOpacity": "10",
					"collapsed": false
				}
			},
			"isOpen": true,
			"main": true,
			"name": "Template details",
			"keysgraphics": true,
			"linegraphics": "detailed",
			"zoom": 1,
			"background": "transparent",
			"scroll": {
				"x": 0,
				"y": 0
			},
			"type": "erd",
			"showColumns": true,
			"showColumnDataTypes": true,
			"showSampleData": false,
			"showTableIndexes": true,
			"showTableDescriptions": false,
			"showEstimatedSize": false,
			"showSchemaContainer": true,
			"showEmbeddedInParents": true,
			"showCardinalityCaptions": true,
			"showRelations": true,
			"backgroundImage": "na",
			"descriptionsColor": "transparent",
			"showHorizontal": true,
			"showDescriptions": false,
			"showIndicators": true,
			"showProgress": true,
			"lineWidth": "2",
			"boxSize": "0",
			"showIndicatorCaptions": true,
			"embeddedSpacing": "2",
			"showMainIcon": true,
			"showLabels": true,
			"boxSpacing": "2",
			"boxAlign": "center",
			"showRelationshipNames": false,
			"showLineCaptions": false,
			"showCustomizations": true,
			"showExportDimensions": false,
			"showCompleted": true
		},
		"a9be86f6-8c2b-48f4-a608-f4a42b34552f": {
			"name": "Main Diagram",
			"description": "",
			"id": "a9be86f6-8c2b-48f4-a608-f4a42b34552f",
			"keysgraphics": true,
			"linegraphics": "detailed",
			"zoom": 1,
			"background": "transparent",
			"lineColor": "transparent",
			"isOpen": true,
			"main": false,
			"diagramItems": {},
			"scroll": {
				"x": 0,
				"y": 0
			},
			"type": "erd",
			"showColumns": true,
			"showColumnDataTypes": true,
			"showSampleData": false,
			"showTableIndexes": true,
			"showTableDescriptions": false,
			"showEstimatedSize": false,
			"showSchemaContainer": true,
			"showEmbeddedInParents": true,
			"showCardinalityCaptions": true,
			"showRelations": true,
			"backgroundImage": "na",
			"descriptionsColor": "transparent",
			"showHorizontal": true,
			"showDescriptions": false,
			"showIndicators": true,
			"showProgress": true,
			"lineWidth": "2",
			"boxSize": "0",
			"showIndicatorCaptions": true,
			"embeddedSpacing": "2",
			"showMainIcon": true,
			"showLabels": true,
			"boxSpacing": "2",
			"boxAlign": "center",
			"showRelationshipNames": false,
			"showLineCaptions": false,
			"showCustomizations": false,
			"showExportDimensions": false,
			"showCompleted": true
		}
	},
	"diagramsOrder": [
		"a9be86f6-8c2b-48f4-a608-f4a42b34552f"
	],
	"order": [
		"99dc029f-a304-4789-b8c3-8d2ae64538e5",
		"d65aac60-a954-464f-b057-656f7ace6b56"
	],
	"collapsedTreeItems": [],
	"reverseStats": {}
}